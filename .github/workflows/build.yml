name: build
on: [push, pull_request]

jobs:
  xsr1:
    name: xsr1 build - ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ldc-latest

      - name: Run build
        working-directory: ./xsr1
        run: dub build --build=release

      - name: Upload ${{ matrix.os }} binary
        uses: actions/upload-artifact@v4
        with: 
          name: xsr1 - ${{ matrix.os }} binary
          path: ./xsr1/rfs_dumper*

  fugue:
    name: fugue build - ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ldc-latest

      - name: Run build
        working-directory: ./fugue-dumper
        run: dub build --build=release

      - name: Upload ${{ matrix.os }} binary
        uses: actions/upload-artifact@v4
        with: 
          name: fugue-dumper - ${{ matrix.os }} binary
          path: ./fugue-dumper/fsrecovery*
      
      - name: Update nightly release
        uses: pyTooling/Actions/releaser@main
        if: github.ref == 'refs/heads/master'
        with:
          tag: nightly
          rm: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: './fugue-dumper/fsrecovery*'

  toshiba:
    name: toshiba build - ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure and Build Project
        uses: threeal/cmake-action@main
        with: 
          source-dir: ./toshiba
          build-dir: ./toshiba/build
          args: -DCMAKE_BUILD_TYPE=Release -D CMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded
          generator: Visual Studio 17 2022

      - name: Upload ${{ matrix.os }} binary
        uses: actions/upload-artifact@v4
        with: 
          name: toshiba - ${{ matrix.os }} binary
          path: ./toshiba/build/Debug/toshiba_remap.exe
